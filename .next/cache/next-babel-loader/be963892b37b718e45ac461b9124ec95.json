{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sandy/Desktop/next-movie-omdb/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Home(_ref) {\n  var results = _ref.results,\n      search = _ref.search;\n  console.log({\n    search: search\n  });\n  return __jsx(React.Fragment, null, __jsx(List, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = Home;\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ctx$query$query, _ctx$query;\n\n    var req, res, match, history, location, ctx, search, response, data, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, match = _ref2.match, history = _ref2.history, location = _ref2.location, ctx = _objectWithoutProperties(_ref2, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n            search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\"; // Get external data from the file system, API, DB, etc.\n\n            _context.next = 4;\n            return fetch(\"http://www.omdbapi.com/?apikey=158fe49&s=fast\");\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            results = data.Search; // The value of the `props` key will be\n            //  passed to the `Home` component\n\n            return _context.abrupt(\"return\", {\n              props: {\n                results: results,\n                search: search\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sandy/Desktop/next-movie-omdb/pages/index.js"],"names":["fetch","List","Home","results","search","console","log","getInitialProps","req","res","match","history","location","ctx","query","response","json","data","Search","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,SAASC,IAAT,OAAmC;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA,MAAM,EAANA;AAAF,GAAZ;AACA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAED,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;KAPQD,I;;AAQTA,IAAI,CAACK,eAAL;AAAA,uEAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,GADqB,SACrBA,GADqB,EAErBC,GAFqB,SAErBA,GAFqB,EAGrBC,KAHqB,SAGrBA,KAHqB,EAIrBC,OAJqB,SAIrBA,OAJqB,EAKrBC,QALqB,SAKrBA,QALqB,EAMlBC,GANkB;AAQfT,YAAAA,MARe,uBAQNS,GARM,aAQNA,GARM,qCAQNA,GAAG,CAAEC,KARC,+CAQN,WAAYA,KARN,+DAQe,EARf,EASrB;;AATqB;AAAA,mBAUEd,KAAK,iDAVP;;AAAA;AAUfe,YAAAA,QAVe;AAAA;AAAA,mBAWFA,QAAQ,CAACC,IAAT,EAXE;;AAAA;AAWfC,YAAAA,IAXe;AAYfd,YAAAA,OAZe,GAYLc,IAAI,CAACC,MAZA,EAcrB;AACA;;AAfqB,6CAgBd;AACLC,cAAAA,KAAK,EAAE;AAAEhB,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,MAAM,EAANA;AAAX;AADF,aAhBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAeF,IAAf","sourcesContent":["import fetch from \"node-fetch\";\n\nimport List from \"../components/List\";\nfunction Home({ results, search }) {\n  console.log({ search });\n  return (\n    <>\n      <List results={results} />\n    </>\n  );\n}\nHome.getInitialProps = async ({\n  req,\n  res,\n  match,\n  history,\n  location,\n  ...ctx\n}) => {\n  const search = ctx?.query?.query ?? \"\";\n  // Get external data from the file system, API, DB, etc.\n  const response = await fetch(`http://www.omdbapi.com/?apikey=158fe49&s=fast`);\n  const data = await response.json();\n  const results = data.Search;\n\n  // The value of the `props` key will be\n  //  passed to the `Home` component\n  return {\n    props: { results, search },\n  };\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}