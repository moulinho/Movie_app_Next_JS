{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nexport var Context = React.createContext();\nvar links = [{\n  name: \"movie\",\n  icon: \"film\"\n}, {\n  name: \"serie\",\n  icon: \"tv\"\n}, {\n  name: \"game\",\n  icon: \"gamepad\"\n}];\n\nvar ContextProvider = function ContextProvider(props) {\n  var _useState = useState({\n    query: \"\",\n    links: links,\n    active: links[0]\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var setActive = function setActive(link) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      active: link\n    }));\n  };\n\n  var setQuery = function setQuery(input) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      query: input\n    }));\n  };\n\n  var value = React.useMemo(function () {\n    return {\n      state: state,\n      setActive: setActive,\n      setQuery: setQuery\n    };\n  }, [state.query, state.active]);\n  return __jsx(Context.Provider, {\n    value: value\n  }, props.children);\n};\n\nexport default ContextProvider;","map":null,"metadata":{},"sourceType":"module"}