{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sandy/Desktop/next-movie-omdb/pages/movie.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Movie(_ref) {\n  var results = _ref.results;\n  return __jsx(React.Fragment, null, __jsx(List, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = Movie;\n\nMovie.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ctx$query$query, _ctx$query;\n\n    var req, res, match, history, location, ctx, search, response, data, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, match = _ref2.match, history = _ref2.history, location = _ref2.location, ctx = _objectWithoutProperties(_ref2, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n            search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\"; // Get external data from the file system, API, DB, etc.\n\n            _context.next = 4;\n            return fetch(\"http://www.omdbapi.com/?apikey=158fe49&s=\".concat(searcg));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            results = data.Search; // The value of the `props` key will be\n            //  passed to the `Home` component\n\n            return _context.abrupt(\"return\", {\n              results: results\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/sandy/Desktop/next-movie-omdb/pages/movie.js"],"names":["fetch","List","Movie","results","getInitialProps","req","res","match","history","location","ctx","search","query","searcg","response","json","data","Search"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,SAASC,KAAT,OAA4B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1B,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;KANQD,K;;AAOTA,KAAK,CAACE,eAAN;AAAA,uEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,GADsB,SACtBA,GADsB,EAEtBC,GAFsB,SAEtBA,GAFsB,EAGtBC,KAHsB,SAGtBA,KAHsB,EAItBC,OAJsB,SAItBA,OAJsB,EAKtBC,QALsB,SAKtBA,QALsB,EAMnBC,GANmB;AAQhBC,YAAAA,MARgB,uBAQPD,GARO,aAQPA,GARO,qCAQPA,GAAG,CAAEE,KARE,+CAQP,WAAYA,KARL,+DAQc,EARd,EAStB;;AATsB;AAAA,mBAUCZ,KAAK,oDACkBa,MADlB,EAVN;;AAAA;AAUhBC,YAAAA,QAVgB;AAAA;AAAA,mBAaHA,QAAQ,CAACC,IAAT,EAbG;;AAAA;AAahBC,YAAAA,IAbgB;AAchBb,YAAAA,OAdgB,GAcNa,IAAI,CAACC,MAdC,EAgBtB;AACA;;AAjBsB,6CAkBf;AACLd,cAAAA,OAAO,EAAPA;AADK,aAlBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAsBA,eAAeD,KAAf","sourcesContent":["import fetch from \"node-fetch\";\n\nimport List from \"../components/List\";\nfunction Movie({ results }) {\n  return (\n    <>\n      <List results={results} />\n    </>\n  );\n}\nMovie.getInitialProps = async ({\n  req,\n  res,\n  match,\n  history,\n  location,\n  ...ctx\n}) => {\n  const search = ctx?.query?.query ?? \"\";\n  // Get external data from the file system, API, DB, etc.\n  const response = await fetch(\n    `http://www.omdbapi.com/?apikey=158fe49&s=${searcg}`\n  );\n  const data = await response.json();\n  const results = data.Search;\n\n  // The value of the `props` key will be\n  //  passed to the `Home` component\n  return {\n    results,\n  };\n};\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}