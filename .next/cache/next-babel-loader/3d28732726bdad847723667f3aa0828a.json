{"ast":null,"code":"var _jsxFileName = \"/Users/sandy/Desktop/next-movie-omdb/pages/movie.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Movie({\n  results,\n  search\n}) {\n  console.log({\n    search\n  });\n  return __jsx(React.Fragment, null, __jsx(List, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }));\n}\n\nHome.getInitialProps = async (_ref) => {\n  var _ctx$query$query, _ctx$query;\n\n  let {\n    req,\n    res,\n    match,\n    history,\n    location\n  } = _ref,\n      ctx = _objectWithoutProperties(_ref, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n\n  const search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\"; // Get external data from the file system, API, DB, etc.\n\n  const response = await fetch(`http://www.omdbapi.com/?apikey=158fe49&s=fast`);\n  const data = await response.json();\n  const results = data.Search; // The value of the `props` key will be\n  //  passed to the `Home` component\n\n  return {\n    props: {\n      results,\n      search\n    }\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/sandy/Desktop/next-movie-omdb/pages/movie.js"],"names":["fetch","List","Movie","results","search","console","log","Home","getInitialProps","req","res","match","history","location","ctx","query","response","data","json","Search","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAf,EAAoC;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AACA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAED,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACDI,IAAI,CAACC,eAAL,GAAuB,gBAOjB;AAAA;;AAAA,MAPwB;AAC5BC,IAAAA,GAD4B;AAE5BC,IAAAA,GAF4B;AAG5BC,IAAAA,KAH4B;AAI5BC,IAAAA,OAJ4B;AAK5BC,IAAAA;AAL4B,GAOxB;AAAA,MADDC,GACC;;AACJ,QAAMV,MAAM,uBAAGU,GAAH,aAAGA,GAAH,qCAAGA,GAAG,CAAEC,KAAR,+CAAG,WAAYA,KAAf,+DAAwB,EAApC,CADI,CAEJ;;AACA,QAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAE,+CAAF,CAA5B;AACA,QAAMiB,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,QAAMf,OAAO,GAAGc,IAAI,CAACE,MAArB,CALI,CAOJ;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AADF,GAAP;AAGD,CAnBD;;AAoBA,eAAeG,IAAf","sourcesContent":["import fetch from \"node-fetch\";\n\nimport List from \"../components/List\";\nfunction Movie({ results, search }) {\n  console.log({ search });\n  return (\n    <>\n      <List results={results} />\n    </>\n  );\n}\nHome.getInitialProps = async ({\n  req,\n  res,\n  match,\n  history,\n  location,\n  ...ctx\n}) => {\n  const search = ctx?.query?.query ?? \"\";\n  // Get external data from the file system, API, DB, etc.\n  const response = await fetch(`http://www.omdbapi.com/?apikey=158fe49&s=fast`);\n  const data = await response.json();\n  const results = data.Search;\n\n  // The value of the `props` key will be\n  //  passed to the `Home` component\n  return {\n    props: { results, search },\n  };\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}