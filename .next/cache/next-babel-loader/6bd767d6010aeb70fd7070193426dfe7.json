{"ast":null,"code":"var _jsxFileName = \"/Users/sandy/Desktop/next-movie-omdb/pages/episode.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Episode({\n  results\n}) {\n  return __jsx(React.Fragment, null, __jsx(List, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }));\n}\n\nEpisode.getInitialProps = async (_ref) => {\n  var _ctx$query$query, _ctx$query, _await$response$json, _data$Search;\n\n  let {\n    req,\n    res,\n    match,\n    history,\n    location\n  } = _ref,\n      ctx = _objectWithoutProperties(_ref, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n\n  const search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\"; // Get external data from the file system, API, DB, etc.\n\n  const response = await fetch(`http://www.omdbapi.com/?apikey=158fe49&s=${search}type=game`);\n  const data = (_await$response$json = await response.json()) !== null && _await$response$json !== void 0 ? _await$response$json : [];\n  const results = (_data$Search = data.Search) !== null && _data$Search !== void 0 ? _data$Search : []; // The value of the `props` key will be\n  //  passed to the `Home` component\n\n  return {\n    results\n  };\n};\n\nexport default Game;","map":{"version":3,"sources":["/Users/sandy/Desktop/next-movie-omdb/pages/episode.js"],"names":["fetch","List","Episode","results","getInitialProps","req","res","match","history","location","ctx","search","query","response","data","json","Search","Game"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAEDD,OAAO,CAACE,eAAR,GAA0B,gBAOpB;AAAA;;AAAA,MAP2B;AAC/BC,IAAAA,GAD+B;AAE/BC,IAAAA,GAF+B;AAG/BC,IAAAA,KAH+B;AAI/BC,IAAAA,OAJ+B;AAK/BC,IAAAA;AAL+B,GAO3B;AAAA,MADDC,GACC;;AACJ,QAAMC,MAAM,uBAAGD,GAAH,aAAGA,GAAH,qCAAGA,GAAG,CAAEE,KAAR,+CAAG,WAAYA,KAAf,+DAAwB,EAApC,CADI,CAEJ;;AACA,QAAMC,QAAQ,GAAG,MAAMb,KAAK,CACzB,4CAA2CW,MAAO,WADzB,CAA5B;AAGA,QAAMG,IAAI,2BAAI,MAAMD,QAAQ,CAACE,IAAT,EAAV,uEAA8B,EAAxC;AACA,QAAMZ,OAAO,mBAAGW,IAAI,CAACE,MAAR,uDAAkB,EAA/B,CAPI,CASJ;AACA;;AACA,SAAO;AACLb,IAAAA;AADK,GAAP;AAGD,CArBD;;AAsBA,eAAec,IAAf","sourcesContent":["import fetch from \"node-fetch\";\n\nimport List from \"../components/List\";\nfunction Episode({ results }) {\n  return (\n    <>\n      <List results={results} />\n    </>\n  );\n}\n\nEpisode.getInitialProps = async ({\n  req,\n  res,\n  match,\n  history,\n  location,\n  ...ctx\n}) => {\n  const search = ctx?.query?.query ?? \"\";\n  // Get external data from the file system, API, DB, etc.\n  const response = await fetch(\n    `http://www.omdbapi.com/?apikey=158fe49&s=${search}type=game`\n  );\n  const data = (await response.json()) ?? [];\n  const results = data.Search ?? [];\n\n  // The value of the `props` key will be\n  //  passed to the `Home` component\n  return {\n    results,\n  };\n};\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}