{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sandy/Desktop/next-movie-omdb/pages/episode.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Episode(_ref) {\n  var results = _ref.results;\n  return __jsx(React.Fragment, null, __jsx(List, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = Episode;\n\nEpisode.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ctx$query$query, _ctx$query, _yield$response$json, _data$Search;\n\n    var req, res, match, history, location, ctx, search, response, data, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, match = _ref2.match, history = _ref2.history, location = _ref2.location, ctx = _objectWithoutProperties(_ref2, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n            search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\"; // Get external data from the file system, API, DB, etc.\n\n            _context.next = 4;\n            return fetch(\"http://www.omdbapi.com/?apikey=158fe49&s=\".concat(search, \"type=game\"));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            _context.t1 = _yield$response$json = _context.sent;\n            _context.t0 = _context.t1 !== null;\n\n            if (!_context.t0) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.t0 = _yield$response$json !== void 0;\n\n          case 11:\n            if (!_context.t0) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.t2 = _yield$response$json;\n            _context.next = 16;\n            break;\n\n          case 15:\n            _context.t2 = [];\n\n          case 16:\n            data = _context.t2;\n            results = (_data$Search = data.Search) !== null && _data$Search !== void 0 ? _data$Search : []; // The value of the `props` key will be\n            //  passed to the `Home` component\n\n            return _context.abrupt(\"return\", {\n              results: results\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/Users/sandy/Desktop/next-movie-omdb/pages/episode.js"],"names":["fetch","List","Episode","results","getInitialProps","req","res","match","history","location","ctx","search","query","response","json","data","Search","Game"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,SAASC,OAAT,OAA8B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC5B,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;KANQD,O;;AAQTA,OAAO,CAACE,eAAR;AAAA,uEAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,GADwB,SACxBA,GADwB,EAExBC,GAFwB,SAExBA,GAFwB,EAGxBC,KAHwB,SAGxBA,KAHwB,EAIxBC,OAJwB,SAIxBA,OAJwB,EAKxBC,QALwB,SAKxBA,QALwB,EAMrBC,GANqB;AAQlBC,YAAAA,MARkB,uBAQTD,GARS,aAQTA,GARS,qCAQTA,GAAG,CAAEE,KARI,+CAQT,WAAYA,KARH,+DAQY,EARZ,EASxB;;AATwB;AAAA,mBAUDZ,KAAK,oDACkBW,MADlB,eAVJ;;AAAA;AAUlBE,YAAAA,QAVkB;AAAA;AAAA,mBAaJA,QAAQ,CAACC,IAAT,EAbI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,0BAagB,EAbhB;;AAAA;AAalBC,YAAAA,IAbkB;AAclBZ,YAAAA,OAdkB,mBAcRY,IAAI,CAACC,MAdG,uDAcO,EAdP,EAgBxB;AACA;;AAjBwB,6CAkBjB;AACLb,cAAAA,OAAO,EAAPA;AADK,aAlBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAsBA,eAAec,IAAf","sourcesContent":["import fetch from \"node-fetch\";\n\nimport List from \"../components/List\";\nfunction Episode({ results }) {\n  return (\n    <>\n      <List results={results} />\n    </>\n  );\n}\n\nEpisode.getInitialProps = async ({\n  req,\n  res,\n  match,\n  history,\n  location,\n  ...ctx\n}) => {\n  const search = ctx?.query?.query ?? \"\";\n  // Get external data from the file system, API, DB, etc.\n  const response = await fetch(\n    `http://www.omdbapi.com/?apikey=158fe49&s=${search}type=game`\n  );\n  const data = (await response.json()) ?? [];\n  const results = data.Search ?? [];\n\n  // The value of the `props` key will be\n  //  passed to the `Home` component\n  return {\n    results,\n  };\n};\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}